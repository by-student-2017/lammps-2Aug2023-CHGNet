#-------------------- Initialization -----------------------------------------------------
clear
echo            both    # echoes each input script command to both log file and screen
#-----------------------------------------------------------------------------------------
units metal
boundary p p p
atom_style full
#-----------------------------------------------------------------------------------------
variable Tini equal 273+25  # [K] (Initial temperature)
variable Tfin equal 273+25  # [K] (Annealing temperature)

variable Nout equal  1000 # every 1000 time steps to the specified file

#-------------------- Atom & Lattice description ----------------------------------------
read_data data.lammps

#variable elem string "He Cp C H C3 C2" # specifies the potential file used
variable elem string "He C C H C C" # specifies the potential file used

#-------------------- Force field --------------------------------------------------------
pair_style hybrid/overlay chgnet/gpu /mnt/d/lammps/potentials/CHGNET momb 12.0 0.75 20.0
#pair_style    chgnet /mnt/d/lammps/potentials/CHGNET
#pair_style    chgnet/d3 /mnt/d/lammps/potentials/CHGNET
#pair_style    chgnet/gpu /mnt/d/lammps/potentials/CHGNET
#pair_style    chgnet/d3/gpu /mnt/d/lammps/potentials/CHGNET

pair_coeff    * *  chgnet/gpu 0.3.0 ${elem}

# atom type 1, He
variable C6_1 equal 0.08  # Jnm6mol-1
variable R0_1 equal 1.012 # Angstrom

# atom type 2, Cp
variable C6_2 equal 1.75  # Jnm6mol-1
variable R0_2 equal 1.452 # Angstrom

# atom type 3, C
variable C6_3 equal 1.75  # Jnm6mol-1
variable R0_3 equal 1.452 # Angstrom

# atom type 4, H
variable C6_4 equal 0.14  # Jnm6mol-1
variable R0_4 equal 1.001 # Angstrom

# atom type 5, C3
variable C6_5 equal 1.75  # Jnm6mol-1
variable R0_5 equal 1.452 # Angstrom

# atom type 6, C2
variable C6_6 equal 1.75  # Jnm6mol-1
variable R0_6 equal 1.452 # Angstrom

# convert [Jnm6mol-1] to [eVA6], (sqrt() or ()^0.5)
#-------------------------------------------------------------------------------------------
pair_coeff 1 1 momb 0.0 1.0 1.0 $(sqrt(v_C6_1 * v_C6_1)*10.364) $(v_R0_1 + v_R0_1) # He-He
pair_coeff 1 2 momb 0.0 1.0 1.0 $(sqrt(v_C6_1 * v_C6_2)*10.364) $(v_R0_1 + v_R0_2) # He-Cp
pair_coeff 1 3 momb 0.0 1.0 1.0 $(sqrt(v_C6_1 * v_C6_3)*10.364) $(v_R0_1 + v_R0_3) # He-C
pair_coeff 1 4 momb 0.0 1.0 1.0 $(sqrt(v_C6_1 * v_C6_4)*10.364) $(v_R0_1 + v_R0_4) # He-H
pair_coeff 1 5 momb 0.0 1.0 1.0 $(sqrt(v_C6_1 * v_C6_5)*10.364) $(v_R0_1 + v_R0_5) # He-C3
pair_coeff 1 6 momb 0.0 1.0 1.0 $(sqrt(v_C6_1 * v_C6_6)*10.364) $(v_R0_1 + v_R0_6) # He-C2
#-------------------------------------------------------------------------------------------
pair_coeff 2 2 momb 0.0 1.0 1.0 $(sqrt(v_C6_2 * v_C6_2)*10.364) $(v_R0_2 + v_R0_2) # Cp-Cp
pair_coeff 2 3 momb 0.0 1.0 1.0 $(sqrt(v_C6_2 * v_C6_3)*10.364) $(v_R0_2 + v_R0_3) # Cp-C
pair_coeff 2 4 momb 0.0 1.0 1.0 $(sqrt(v_C6_2 * v_C6_4)*10.364) $(v_R0_2 + v_R0_4) # Cp-H
pair_coeff 2 5 momb 0.0 1.0 1.0 $(sqrt(v_C6_2 * v_C6_5)*10.364) $(v_R0_2 + v_R0_5) # Cp-C2
pair_coeff 2 6 momb 0.0 1.0 1.0 $(sqrt(v_C6_2 * v_C6_6)*10.364) $(v_R0_2 + v_R0_6) # Cp-C3
#-------------------------------------------------------------------------------------------
pair_coeff 3 3 momb 0.0 1.0 1.0 $(sqrt(v_C6_3 * v_C6_3)*10.364) $(v_R0_3 + v_R0_3) # C-C
pair_coeff 3 4 momb 0.0 1.0 1.0 $(sqrt(v_C6_3 * v_C6_4)*10.364) $(v_R0_3 + v_R0_4) # C-H
pair_coeff 3 5 momb 0.0 1.0 1.0 $(sqrt(v_C6_3 * v_C6_5)*10.364) $(v_R0_3 + v_R0_5) # C-C3
pair_coeff 3 6 momb 0.0 1.0 1.0 $(sqrt(v_C6_3 * v_C6_6)*10.364) $(v_R0_3 + v_R0_6) # C-C2
#-------------------------------------------------------------------------------------------
pair_coeff 4 4 momb 0.0 1.0 1.0 $(sqrt(v_C6_4 * v_C6_4)*10.364) $(v_R0_4 + v_R0_4) # H-H
pair_coeff 4 5 momb 0.0 1.0 1.0 $(sqrt(v_C6_4 * v_C6_5)*10.364) $(v_R0_4 + v_R0_5) # H-C3
pair_coeff 4 6 momb 0.0 1.0 1.0 $(sqrt(v_C6_4 * v_C6_6)*10.364) $(v_R0_4 + v_R0_6) # H-C2
#-------------------------------------------------------------------------------------------
pair_coeff 5 5 momb 0.0 1.0 1.0 $(sqrt(v_C6_5 * v_C6_5)*10.364) $(v_R0_5 + v_R0_5) # C3-C3
pair_coeff 5 6 momb 0.0 1.0 1.0 $(sqrt(v_C6_5 * v_C6_6)*10.364) $(v_R0_5 + v_R0_6) # C3-C2
#-------------------------------------------------------------------------------------------
pair_coeff 6 6 momb 0.0 1.0 1.0 $(sqrt(v_C6_6 * v_C6_6)*10.364) $(v_R0_6 + v_R0_6) # C2-C2
#-------------------------------------------------------------------------------------------

#----- LJ, harmonic, cvff version -----
#read_data data_LJ_harmonic_cvff.lammps
#pair_style lj/cut/coul/long 10.0
#bond_style harmonic
#angle_style harmonic
#dihedral_style harmonic
#improper_style cvff

#kspace_style ewald 1.0e-4
#---------------------------------------

#-------------------- Settings -----------------------------------------------------------

#neighbor 2.0 bin
#neigh_modify delay 2 check yes

#----- group setting -------------------
group he id 1:322 
group allc4 molecule  2:301
group graphene subtract all allc4 he
#---------------------------------------

#---------------------------------------
# Here, C is further divided into two types of molecules.
group c4h6 molecule 2:151
group c4h10 molecule 152:301
#---------------------------------------

#----- fix or move group settings -----
#fix 1 graphene  setforce 0.0 0.0 0.0
fix 11 he       setforce 0.0 0.0 0.0 # By giving a value to this z-axis you can get a pushing effect.
#---------------------------------------

# Setting the space (vacuo) for counting molecules
region vacuo block INF INF INF INF 116.0 INF

#-------------------- Energy Minimization ------------------------------------------------
# 0 [K], structure optimization
#structure optimization
minimize 1.0e-4 1.0e-6 1000 10000

#-------------------- Run the simulation -------------------------------------------------
reset_timestep 0

timestep 0.001 # 1.0 [fs] (Recommend 0.1-1.0 [fs]), sets the timestep for subsequent simulations

# Calculate the temperature of a carbon molecule (excluding graphene)
compute  mobile allc4 temp

# Give the carbon molecule (except graphene) a velocity of temperature ${Tini}
velocity allc4  create ${Tini} 123456

#----- Equilibrium system, calculation settings -----
fix 3 all nvt temp ${Tini} ${Tfin} $(100*dt)

#----- variable (Calculate the number of molecules in a space (vacuo)) -----
variable Nc4h10 equal count(c4h10,vacuo)/14.0
variable Nc4h6 equal count(c4h6,vacuo)/10.0

# Converting steps*dt to ps
variable st equal step*dt/1000

#----- statistics -----
fix number allc4 print ${Nout} "${st} ps  c4h6 c4h10 = ${Nc4h6} ${Nc4h10}" file number.tem

#----- number density calculation -----
compute dense allc4 chunk/atom bin/1d z lower 2 

# Output density calculation results to a file
fix C4H10number c4h10 ave/chunk ${Nout} 10 ${Nout} dense density/number ave one file c4h10density.tem
fix C4H6number c4h6 ave/chunk ${Nout} 10 ${Nout} dense density/number ave one file c4h6density.tem

thermo ${Nout}
thermo_style custom step temp press etotal 

# ----- calculate temperature per particle (Additional: 4/Jul/2023) --------------------------------
variable kB  equal 1.3806504e-23 # Boltzman constant [J/K]
variable e2J equal 6.94782e-21   # change [kcal/mol] to [J]
compute ke all ke/atom           # The kinetic energy [kcal/mol] of each atom
variable tempatom atom c_ke*${e2J}*(2/3)/${kB} # ke = (1/2)*m*v^2 = (3/2)*kB*T, T = ke*(2/3)/kB
#
# Reference
# [1] M. Li et al., Nanomaterials 2019, 9(3), 347; https://doi.org/10.3390/nano9030347
# URL: https://www.mdpi.com/2079-4991/9/3/347
# Supplementary Materials: https://www.mdpi.com/2079-4991/9/3/347/s1.
# ----- --------------------------------------------------------------------------------------------
fix ave_tempatom all ave/atom 1 ${Nout} ${Nout} v_tempatom # Average calculation for temperature of each atom
#------------------------------------------
dump          d1 all cfg ${Nout} cfg/run.*.cfg mass type xs ys zs id q vx vy vx fx fy fz f_ave_tempatom
dump_modify   d1 element ${elem}
#------------------------------------------
#dump mydump all  xyz ${Nout} data.xyz
#dump_modify  mydump element ${elem}
#------------------------------------------

restart 50000 *.restart

run 100000

#-------------------- End ----------------------------------------------------------------